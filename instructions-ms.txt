chmod +x cloudlab-setup-ubuntu-tl.sh && ./cloudlab-setup-ubuntu-tl.sh && \
sudo apt-get install libvirt-daemon genisoimage libguestfs-tools libosinfo-bin virtinst qemu-kvm git vim net-tools wget curl bash-completion python-pip libvirt-daemon-system virt-manager bridge-utils libnss-libvirt libvirt-clients osinfo-db-tools intltool sshpass p7zip-full p7zip-rar -y && \
sudo sed -i 's/hosts:          files dns/hosts:          files libvirt libvirt_guest dns/' /etc/nsswitch.conf && sudo lsmod | grep kvm && sudo reboot
#sudo systemctl restart libvirtd && sudo systemctl status libvirtd

screen
# Press Return to continue
# detach from session without killing it: Ctrl a d 
# to see screen sessions: screen -ls
# detach from closed session: screen -d -r 1920.pts-0.node0
# enter session: screen -r 1920.pts-0.node0
# exit a session and terminate it: exit

sudo -i

# Install vagrant
cd /mnt/extra && cat /sys/module/kvm_intel/parameters/nested && cat /proc/cpuinfo | awk '/^processor/{print $3}' | wc -l && free -h && df -hT && sudo virsh list --all && sudo brctl show && \
wget -O- https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg && \
echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list && \
sudo apt update -y && sudo apt install vagrant && vagrant plugin install vagrant-libvirt && \
sudo tee --append /etc/hosts <<< "172.16.1.101 n1.example.com" && \
sudo tee --append /etc/hosts <<< "172.16.1.102 n2.example.com" && \
sudo tee --append /etc/hosts <<< "172.16.1.103 n3.example.com" && \
sudo tee --append /etc/hosts <<< "172.16.1.104 n4.example.com" && \
sudo tee --append /etc/hosts <<< "172.16.1.105 n5.example.com" && \
sudo tee --append /etc/hosts <<< "172.16.1.106 n6.example.com" && \
sudo tee --append /etc/hosts <<< "172.16.1.107 n7.example.com"

##################################################################################################################################################################################
######################################## MicroStack Cluster (https://github.com/vpasias/clusterlab) #############################################################################################################
##################################################################################################################################################################################

git clone https://github.com/vpasias/clusterlab.git && cd /mnt/extra/clusterlab && ls -lah && chmod +x net_deployment.sh && ./net_deployment.sh && \
sudo virsh list --all && sudo brctl show && sudo virsh net-list --all

vagrant up

ssh -o "StrictHostKeyChecking=no" ubuntu@n1.example.com

cat /sys/module/kvm_intel/parameters/nested && cat /proc/cpuinfo | awk '/^processor/{print $3}' | wc -l && free -h && df -hT && lsblk

sudo snap install openstack --channel 2023.2

sunbeam prepare-node-script | bash -x && newgrp snap_daemon

sunbeam cluster bootstrap --role control --role compute --role storage

#Management networks shared by hosts (CIDRs, separated by comma) (10.20.20.0/24): 172.16.1.0/24
#MetalLB address allocation range (supports multiple ranges, comma separated) (10.20.20.10-10.20.20.20): 172.16.1.201-172.16.1.220
#Disks to attach to MicroCeph: /dev/sdb

sunbeam cluster add --name n2.example.com

#Token: 

exit

ssh -o "StrictHostKeyChecking=no" ubuntu@n2.example.com

sudo snap install openstack --channel 2023.2

sunbeam prepare-node-script | bash -x && newgrp snap_daemon

sunbeam cluster join --role control --role compute --role storage \
   --token 

#Free network interface that will be configured for external traffic [eno1/eno2] (eno1): enp9s0

exit

ssh -o "StrictHostKeyChecking=no" ubuntu@n1.example.com

sunbeam cluster add --name n3.example.com

#Token: 

exit

ssh -o "StrictHostKeyChecking=no" ubuntu@n3.example.com

sudo snap install openstack --channel 2023.2

sunbeam prepare-node-script | bash -x && newgrp snap_daemon

sunbeam cluster join --role control --role compute --role storage \
   --token 

#Free network interface that will be configured for external traffic [eno1/eno2] (eno1): enp8s0

exit

ssh -o "StrictHostKeyChecking=no" ubuntu@n1.example.com

sunbeam cluster resize

sunbeam configure --openrc demo-openrc

#Local or remote access to VMs [local/remote] (local): remote
#CIDR of network to use for external networking (10.20.20.0/24): 172.16.2.0/24
#IP address of default gateway for external network (10.20.20.1): 172.16.2.1
#Populate OpenStack cloud with demo user, default images, flavors etc [y/n] (y):
#Username to use for access to OpenStack (demo):
#Password to use for access to OpenStack (mt********):
#Network range to use for project network (192.168.122.0/24):
#Enable ping and SSH access to instances? [y/n] (y):
#Start of IP allocation range for external network (10.20.20.2): 172.16.2.2
#End of IP allocation range for external network (10.20.20.254): 172.16.2.254
#Network type for access to external network [flat/vlan] (flat):
#Writing openrc to demo-openrc ... done
#Free network interface that will be configured for external traffic [eno1/eno2] (eno1): enp8s0

sunbeam launch ubuntu --name test

#############################################################################################################
################ Delete ########################################################################################
#############################################################################################################

cd /mnt/extra/clusterlab && vagrant destroy -f && virsh net-destroy cluster && rm -rf /mnt/extra/cluster.xml && virsh net-destroy service && rm -rf /mnt/extra/service.xml && \
virsh net-undefine cluster && virsh net-undefine service && rm -rf /root/.ssh/known_hosts && touch /root/.ssh/known_hosts && \
sudo virsh list --all && sudo brctl show && sudo virsh net-list --all
